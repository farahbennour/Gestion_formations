@using static Gestion_Formations.Controllers.AuthController
@{
    ViewData["Title"] = "Signup";
}
<link rel="stylesheet" href="~/css/style.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
@model RegisterModel
<h2>Signup</h2>




<!-- Modal pour choisir le type d'utilisateur -->
<div id="userTypeModal" class="modal" tabindex="-1" role="dialog" style="@(!ViewData.ModelState.IsValid ? "display: none;" : "display: block;")">
    <div class="modal-overlay"></div>
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Vous êtes :</h5>
            </div>
            <div class="modal-body">
                <select id="UserType" class="form-control" required>
                    <option value="">Sélectionner</option>
                    <option value="Apprenant">Apprenant</option>
                    <option value="Formateur">Formateur</option>
                </select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="confirmUserType">Confirmer</button>
            </div>
        </div>
    </div>
</div>

<!-- Formulaire d'inscription -->

<form asp-controller="Auth" asp-action="Signup" method="post" id="signupForm" style="display: block;">

    <div class="form-group">
        <label for="Username">Nom d'utilisateur</label>
        <input type="text" id="Username" name="Username" class="form-control" required />
        <span asp-validation-for="Username" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Email">Adresse Mail</label>
        <input type="email" id="Email" name="Email" class="form-control" required />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>    <div class="form-group">
        <label>Nouveau mot de passe</label>
        <div class="input-group">
            <input type="password"
                   id="PasswordHash"
                   class="form-control"
                   name="PasswordHash" />
            <div class="input-group-append">
                <button class="btn btn-outline-secondary"
                        type="button"
                        onclick="togglePasswordVisibility('PasswordHash')">
                    <i class="bi bi-eye-slash"></i>
                </button>
            </div>
        </div>
        <span asp-validation-for="PasswordHash" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="Telephone">Téléphone</label>
        <input type="text" id="Telephone" name="Telephone" class="form-control" required />
        <span asp-validation-for="Telephone" class="text-danger"></span>

    </div>
    <div class="form-group">
        <label for="Adresse">Adresse</label>
        <input type="text" id="Adresse" name="Adresse" class="form-control" required />
    </div>
    <div class="form-group">
        <label for="DateNaissance">Date de naissance</label>
        <input type="date" id="DateNaissance" name="DateNaissance" class="form-control" required />
    </div>
    <div class="form-group" id="dateEmbaucheField" style="display: none;">
        <input type="hidden" id="DateInscription" name="DateInscription" class="form-control" required />
    </div>

    <div class="form-group" id="specialiteField" style="display: none;">
        <label for="Specialite">Spécialité</label>
        <input type="text" id="Specialite" name="Specialite" class="form-control" />
        <span asp-validation-for="Specialite" class="text-danger"></span>
    </div>
    <div class="form-group" id="experienceField" style="display: none;">
        <label for="Experience">Expérience (années)</label>
        <input type="number" id="Experience" name="Experience" class="form-control" />
        <span asp-validation-for="Experience" class="text-danger"></span>
    </div>
    <input type="hidden" id="Role" name="Role" />
    <button type="submit" class="btn btn-primary">S'inscrire</button>
</form>

<p>Déjà un compte ? <a href="/Auth/Login">Connectez-vous ici</a></p>

<script>
      document.addEventListener("DOMContentLoaded", function() {

        const roleValue = document.getElementById('Role').value;

        // Synchroniser le select du modal
        if (roleValue) {
            document.getElementById('UserType').value = roleValue;
            toggleFormateurFields(roleValue);
        }

        // Afficher les erreurs existantes
        if ('@ViewData.ModelState.IsValid' === 'False') {
            document.getElementById("userTypeModal").style.display = "none";
            document.getElementById("signupForm").style.display = "block";
        }
    });

    function toggleFormateurFields(role) {
        const specialiteField = document.getElementById('specialiteField');
        const experienceField = document.getElementById('experienceField');
        const dateEmbaucheField = document.getElementById('dateEmbaucheField');

        const isFormateur = role === 'Formateur';

        specialiteField.style.display = isFormateur ? 'block' : 'none';
        experienceField.style.display = isFormateur ? 'block' : 'none';
        dateEmbaucheField.style.display = isFormateur ? 'block' : 'none';

        // Mise à jour des attributs required
        document.getElementById('Specialite').required = isFormateur;
        document.getElementById('Experience').required = isFormateur;
        document.getElementById('DateEmbauche').required = isFormateur;
    }
    // Gestion initiale au chargement
    document.addEventListener("DOMContentLoaded", function() {
        const roleValue = document.getElementById('Role').value;
        toggleFormateurFields(roleValue);

        // Synchroniser le select du modal si nécessaire
        if (roleValue) {
            document.getElementById('UserType').value = roleValue;
        }
    });

    function toggleFormateurFields(role) {
        const specialiteField = document.getElementById('specialiteField');
        const experienceField = document.getElementById('experienceField');

        const isFormateur = role === 'Formateur';

        specialiteField.style.display = isFormateur ? 'block' : 'none';
        experienceField.style.display = isFormateur ? 'block' : 'none';

        // Mise à jour des attributs required
        document.getElementById('Specialite').required = isFormateur;
        document.getElementById('Experience').required = isFormateur;
    }

    document.getElementById('confirmUserType').addEventListener('click', function() {
        const userType = document.getElementById('UserType').value;
        const roleField = document.getElementById('Role');

        if (userType) {
            roleField.value = userType;
            document.getElementById('userTypeModal').style.display = 'none';
            document.getElementById('signupForm').style.display = 'block';
            toggleFormateurFields(userType);
        } else {
            alert('Veuillez choisir un type d\'utilisateur.');
        }
    });
</script>

@section Scripts {
    <script>
        function togglePasswordVisibility(inputId) {
            const passwordInput = document.getElementById(inputId);
            const eyeIcon = passwordInput.nextElementSibling.querySelector('i');

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                eyeIcon.classList.remove('bi-eye-slash');
                eyeIcon.classList.add('bi-eye');
            } else {
                passwordInput.type = 'password';
                eyeIcon.classList.remove('bi-eye');
                eyeIcon.classList.add('bi-eye-slash');
            }
        }
    </script>
}

<style>

    /* .form-control { */
    /*     height: calc(2.25rem + 2px); /* Hauteur par défaut Bootstrap */ */
    /* } */

    .input-group-append {
        height: 100%;
    }

        .input-group-append button {
            height: 100%;
           
            padding: 5.5px 12px;
            border: 1px solid #ced4da;
            border-left: 0;
            border-radius: 0 0.25rem 0.25rem 0;
        }

            .input-group-append button:hover {
                background-color: gray;
            }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center; 
        z-index: 1000;
    }

    .modal-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); 
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        z-index: 1001;
        width: 90%;
        max-width: 400px; 
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); 
        position: relative;
        transform: translateX(+15%); 
    }
</style>

